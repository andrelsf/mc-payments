quarkus:
  profile: ${QUARKUS_PROFILE:dev}
  application:
    name: ${QUARKUS_APP_NAME:mcpayments}
  shutdown:
    timeout: 5
  banner:
    enabled: false
  http:
    port: ${QUARKUS_HTTP_PORT:8093}
  datasource:
    db-kind: ${QUARKUS_DATASOURCE_KIND:postgresql}
    jdbc:
      url: ${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://10.200.0.203:5432/mcpayments}
    username: ${QUARKUS_DATASOURCE_USERNAME:mcpayments}
    password: ${QUARKUS_DATASOURCE_PASSWORD:mcpayments}
  hibernate-orm:
    database:
      generation: none
  liquibase:
    migrate-at-start: true
    change-log: "liquibase/changelog.yml"
  log:
    console:
      enable: true
      level: INFO
      format: "%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n"

  kafka:
    bootstrap:
      servers: localhost:9092
  mp:
    messaging:
      incoming:
        # Configuring the incoming channel (reading from Kafka)
        sec-payments:
          connector: smallrye-kafka
          topic: sec-payments
          value:
            deserializer: br.dev.multicode.utils.deserializers.OrderPaymentMessageDeserializer
      outgoing:
        # Configuring the outgoing channel (writing to Kafka)
        sec-response-status:
          connector: smallrye-kafka
          topic: sec-response-status
          value:
            serializer: io.quarkus.kafka.client.serialization.JsonbSerializer